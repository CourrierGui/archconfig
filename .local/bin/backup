#!/bin/bash

# system backup

# Goals:
# - copy every files in the source into the destination
# - allow incremental copies: only copy modified files
# - exclude files and directories
# - display the diff
# - store the md5?
# - create an archive (tar + compression)
# - backup exclude file per machine
# - encryption

# Backup destination
function error()
{
    echo "$@"
    exit 1
}

function confirm()
{
    read -rp "Do you want to continue ? [y/N]" continue

    if [ "$continue" != "y" ]
    then
        exit
    fi
}

function do_if_confirm()
{
    echo "$@"
    confirm
    "$@"
}

# rsync options:
# - A: acls
# - X: xattr
# - o: owner
# - g: group
# - t: mtime
# - U: atime
# - u: update, skip newer files on destination
# - N: ctime -> not supported ?
# - v: verbose
# - --exclude-from=FILE: path to file containing excluded patterns
# - --include-from=FILE: path to file containing included patterns
# - --dry-run
# - --ignore-existing ?
function copy_tree()
{
    local in=$1
    local out="$2/backups/root"
    local include_file=$3
    local opts="--dry-run -rAXogtUuv"

    if [ ! -d "$in" ]
    then
        error "Directory '$in' does not exist"
    fi

    mkdir -p "$out"

    if [ -n "$include_file" ]
    then
        opts="$opts --files-from=$include_file"
        if [ ! -f "$include_file" ]
        then
            error "Include file '$include_file' not found"
        fi
    fi

    do_if_confirm sudo rsync $opts "$in" "$out"
}

# Restore from the backup tree
function restore_tree()
{
    # sudo rsync -aAXv --delete --exclude="lost+found" /source destination
    echo "Not implemented"
}

# Restore from a specific backup file
function restore_snapshot()
{
    echo "Not implemented"
}

function help()
{
    echo "Usage: $0 <command> <args>"
    echo ""
    echo "Commands:"
    echo "  copy      copy the files from the machine to the backup"
    echo "            --dry-run  do not copy, only display what would happen"
    echo "            -e         path to a file containing a list of excluded paths"
    echo ""
    echo "  restore   restore a backup from a snapshot or the backup tree"
    echo ""
    echo "  snapshot  make a snapshot of the backup tree"
    echo ""
    echo "  help      show this message"
}

tree_path="???"
snapshot_path="???"

case "$1" in
    copy)
        shift
        copy_tree "$1" "$2" "$3"
        ;;
    snapshot)
        make_snapshot "$tree_path" "$snapshot_path"
        ;;
    restore)
        restore_tree
        ;;
    help)
        help
        ;;
    *)
        echo "Unknown command"
        ;;
esac

exit 0

# --slice 620M --first-slice 600M
# compress "$root_dir" "$destination/$prefix-$date" "$exclude"
compress() {
  dar --execute "par2 c -r5 \"%p/%b.%n.par2\" \"%p/%b.%n.%e\"" \
    --alter=atime --empty-dir --fs-root "$1" --noconf          \
    --create "$2/backup" -z6 -an -Z "*.ogg" -Z "*.avi"         \
    -Z "*.mp?" -Z "*.pk3" -Z "*.flac" -Z "*.zip" -Z "*.tgz"    \
    -Z "*.gz" -Z "*.gzip" -Z "*.bz2" -Z "*.bzip2" -Z "*.mov"   \
    -Z "*.r" --exclude-from-file "$3" -v -X "backup.*.dar"
}
